# Generated by Django 3.1.5 on 2021-02-19 05:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('job', '0001_initial'),
        ('company', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('enc_pass', models.CharField(blank=True, max_length=40, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('dob', models.DateField(blank=True, null=True)),
                ('photo_url', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, max_length=30, null=True)),
                ('removed', models.BooleanField(default=False)),
                ('inserted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_admin', models.IntegerField(default=0)),
                ('is_employer', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('nationality', models.TextField(blank=True, max_length=50, null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('alternate_mobile', models.BigIntegerField(blank=True, null=True)),
                ('job_role', models.CharField(default='', max_length=500)),
                ('profile_description', models.CharField(default='', max_length=2000)),
                ('resume_link', models.CharField(blank=True, max_length=255, null=True)),
                ('is_relocation', models.BooleanField(default=False)),
                ('year', models.CharField(blank=True, max_length=50, null=True)),
                ('month', models.CharField(default='', max_length=50)),
                ('registered_via', models.CharField(choices=[('Email', 'Email'), ('Social', 'Social'), ('Careers', 'Careers'), ('Friend', 'Friend')], default='', max_length=15)),
                ('linkedin', models.CharField(max_length=150, null=True)),
                ('github', models.CharField(max_length=150, null=True)),
                ('twitter', models.CharField(max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree_name', models.CharField(max_length=500)),
                ('degree_type', models.CharField(choices=[('Permanent', 'Permanent'), ('PartTime', 'PartTime')], max_length=50)),
                ('specialization', models.CharField(blank=True, max_length=500, null=True)),
                ('removed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.country')),
            ],
        ),
        migrations.CreateModel(
            name='EmploymentHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=500)),
                ('from_date', models.DateField(null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('designation', models.CharField(max_length=500)),
                ('current_job', models.BooleanField(default=False)),
                ('job_profile', models.TextField()),
                ('removed', models.BooleanField(default=False)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.candidate')),
            ],
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('alternate_mobile', models.BigIntegerField(blank=True, null=True)),
                ('registered_via', models.CharField(choices=[('Email', 'Email'), ('Social', 'Social'), ('Careers', 'Careers'), ('Friend', 'Friend')], default='', max_length=15)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EducationalInstitute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.city')),
            ],
        ),
        migrations.CreateModel(
            name='EducationalDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField()),
                ('to_date', models.DateField(blank=True, null=True)),
                ('score', models.CharField(max_length=50)),
                ('is_currently_enrolled', models.BooleanField(default=False)),
                ('removed', models.BooleanField(default=False)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.candidate')),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.degree')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.educationalinstitute')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='user.state'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.city'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.country'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='diversity_tags',
            field=models.ManyToManyField(to='job.Tag'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='preferred_city',
            field=models.ManyToManyField(related_name='preferred_city', to='user.City'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.state'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
